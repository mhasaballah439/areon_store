[cart]
[checkout_payment]
[web_setiing]
[account]
==
<form data-request="onPaymentStripe"
      data-request-success="send_order_complete(data);" id="onCheckOut"
      data-request-update="'cart/header':'.cart_header' ">
    <div class="gluten">
        <div class="row mt-3" style="justify-content: center;">
<!--<form id="payment-form" class="hideOption">-->
<div class="col-md-4">
    <label class="labl">
        <input class="glutenRadio2 hand" type="radio"
               name="payment"
               value="cash" id="payment-cash" checked />
        <div class="box-deliv opt1">
            <div class="card shadow-deliv">
                <span class="uk-badge">{{'Selected'|_}}</span>
                <div class="card-title text-center">
                    <p class="pt-3 include">{{'Cash Payment'|_}}</p>
                </div>
                <div class="">
                    <div class="col offset-s3 text-center"><img
                        class="pt-1 pb-3" width="55%" src="{{'assets/imges/cash.png'|theme}}">
                    </div>
                </div>
            </div>
        </div>
    </label>
</div>
<!--  gluten -->
{% if web_setting.stripe %}
<div class="col-md-4">
    <label class="labl">
        <input class="glutenRadio2 visa" name="payment" type="radio"
               id="payment-online"
               value="online" />
        <div>
            <div class="box-deliv opt2">
                <div class="card shadow-deliv">
                    <span class="uk-badge">{{'Selected'|_}}</span>
                    <div class="card-title text-center">
                        <p class="pt-3 include">{{'Online Payment'|_}}</p>
                    </div>
                    <div class="">
                        <div class="col offset-s3 text-center"><img
                            class="pt-1 pb-3" width="55%"
                            src="{{'assets/imges/visa.png'|theme}}"></div>
                    </div>
                </div>
            </div>
        </div>
    </label>

</div>
{% endif %}
        </div>
    </div>
    <hr class="uk-divider-icon step3line">
    <div class="container">
        <div class="textAreaStep3 showOption">
            <div class="uk-margin">
             <textarea class="uk-textarea" rows="5" name="note"
             placeholder="{{'Write Notat Here'|_}}"></textarea>
            </div>
        </div>
    </div>
    <div class="text-center">
        <button class="btn submit_btns" type="submit">{{'Bestil'|_}} <i class="fal fa-paper-plane"></i></button>
    </div>
</form>
<form class="payments_form hideOption" id="payment-form">
    <div id="card-element">
        <!-- Elements will create input elements here -->
    </div>

    <!-- We'll put the error messages in this element -->
    <div id="card-errors" role="alert"></div>

    <button id="submit" class="twoToneButton" style="width: 100%">{{'Pay'|_}}</button>
</form>


{% put styles %}
<style type="text/css">
    #payment-form {
        align-self: center;
        margin-left: auto;
        margin-right: auto;
    }
    #submit:focus{
        outline: none;
    }
    #payment-form input {
        border-radius: 6px;
        margin-bottom: 6px;
        padding: 12px;
        border: 1px solid rgba(50, 50, 93, 0.1);
        height: 44px;
        font-size: 16px;
        width: 100%;
        background: white;
    }

    .result-message {
        line-height: 22px;
        font-size: 16px;
    }

    .result-message a {
        color: rgb(89, 111, 214);
        font-weight: 600;
        text-decoration: none;
    }

    .hidden {
        display: none;
    }

    #card-error {
        color: rgb(105, 115, 134);
        text-align: left;
        font-size: 13px;
        line-height: 17px;
        margin-top: 12px;
    }

    #card-element {
        border-radius: 4px 4px 0 0 ;
        padding: 12px;
        border: 1px solid rgba(50, 50, 93, 0.1);
        height: 44px;
        width: 100%;
        background: white;
    }

    #payment-request-button {
        margin-bottom: 32px;
    }

    /* Buttons and links */
    button {
        background: #1d2324;
        color: #fff !important;
        font-family: Arial, sans-serif;
        border-radius: 0 0 4px 4px;
        border: 0;
        padding: 12px 16px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        display: block;
        transition: all 0.2s ease;
        /*box-shadow: 0px 4px 5.5px 0px rgba(0, 0, 0, 0.07);*/
    }
    button:hover {
        filter: contrast(115%);
    }
    button:disabled {
        opacity: 0.5;
        cursor: default;
    }

    /* spinner/processing state, errors */
    .spinner,
    .spinner:before,
    .spinner:after {
        border-radius: 50%;
    }
    .spinner {
        color: #fff;
        font-size: 22px;
        text-indent: -99999px;
        margin: 0px auto;
        position: relative;
        width: 20px;
        height: 20px;
        box-shadow: inset 0 0 0 2px;
        -webkit-transform: translateZ(0);
        -ms-transform: translateZ(0);
        transform: translateZ(0);
    }
    .spinner:before,
    .spinner:after {
        position: absolute;
        content: "";
    }
    .spinner:before {
        width: 10.4px;
        height: 20.4px;
        background: #1d2324;
        border-radius: 20.4px 0 0 20.4px;
        top: -0.2px;
        left: -0.2px;
        -webkit-transform-origin: 10.4px 10.2px;
        transform-origin: 10.4px 10.2px;
        -webkit-animation: loading 2s infinite ease 1.5s;
        animation: loading 2s infinite ease 1.5s;
    }
    .spinner:after {
        width: 10.4px;
        height: 10.2px;
        background: #1d2324;
        border-radius: 0 10.2px 10.2px 0;
        top: -0.1px;
        left: 10.2px;
        -webkit-transform-origin: 0px 10.2px;
        transform-origin: 0px 10.2px;
        -webkit-animation: loading 2s infinite ease;
        animation: loading 2s infinite ease;
    }

    @-webkit-keyframes loading {
        0% {
            -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
        }
        100% {
            -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
        }
    }
    @keyframes loading {
        0% {
            -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
        }
        100% {
            -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
        }
    }

    @media only screen and (max-width: 600px) {
        form {
            width: 80vw;
        }
    }

    .twoToneButton {
        display: inline-block;
        outline: none;
        padding: 10px 20px;
        line-height: 1.4;
        box-shadow: 0 0 30px 0 rgba(27,29,29,.5);
        background-color: #1d2324;
        border-radius: 4px;
        border: 1px solid #000000;
        color: #dadada;
        position: relative;
        -webkit-transition: padding-right 0.3s ease;
        transition: padding-right 0.3s ease;
        font-weight: 700;
        box-shadow: 0 1px 0 #6e6e6e inset, 0px 1px 0 #3b3b3b;
    }
    .twoToneButton:hover {
        box-shadow: 0 0 10px #080808 inset, 0px 1px 0 #3b3b3b;
        color: #f3f3f3;
    }
    .twoToneButton:active {
        box-shadow: 0 0 10px #080808 inset, 0px 1px 0 #3b3b3b;
        color: #ffffff;
        box-shadow: 0 0 30px 0 rgba(27,29,29,.5);
        background-color: #1d2324;
    }
    .twoToneButton.spinning {
        background-color: #212121;
        padding-right: 40px;
    }
    .twoToneButton.spinning:after {
        content: '';
        right: 6px;
        top: 50%;
        width: 0;
        height: 0;
        box-shadow: 0px 0px 0 1px #080808;
        position: absolute;
        border-radius: 50%;
        -webkit-animation: rotate360 0.5s infinite linear, exist 0.1s forwards ease;
        animation: rotate360 0.5s infinite linear, exist 0.1s forwards ease;
    }
    .twoToneButton.spinning:before {
        content: "";
        width: 0px;
        height: 0px;
        border-radius: 50%;
        right: 6px;
        top: 50%;
        position: absolute;
        border: 2px solid #fff;
        border-right: 3px solid #c59d5f;
        -webkit-animation: rotate360 0.5s infinite linear, exist 0.1s forwards ease;
        animation: rotate360 0.5s infinite linear, exist 0.1s forwards ease;
    }
    @-webkit-keyframes rotate360 {
        100% {
            -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
        }
    }
    @keyframes rotate360 {
        100% {
            -webkit-transform: rotate(360deg);
            transform: rotate(360deg);
        }
    }
    @-webkit-keyframes exist {
        100% {
            width: 15px;
            height: 15px;
            margin: -8px 5px 0 0;
        }
    }
    @keyframes exist {
        100% {
            width: 15px;
            height: 15px;
            margin: -8px 5px 0 0;
        }
    }
    .submit_btns{
        background-color: #cab671;
        color: white;
        border: 1px solid transparent;
        padding: 10px 50px;
        border-radius: 4px;
        margin-bottom: 25px;
        font-weight: 600;
        font-size: 20px;
        transition: 0.4s ease-in-out;
    }

    .submit_btns:hover{
        background-color: transparent;
        color: #cab671 !important;
        border: 1px solid #cab671;
    }

</style>
{% endput %}
{% put scripts %}

<script src="https://js.stripe.com/v3/"></script>

<script>
    $('.backBtn').click(function(){

        $('#payment-form').removeClass('showOption');
        $('#payment-form').addClass('hideOption');

        $('.backBtn').removeClass('showOption');
        $('.backBtn').addClass('hideOption');
        $('#onCheckOut').removeClass('hideOption');

        //new line by omar
         previousBtn.classList.remove('d-none');
         previousBtn.classList.add('d-inline-block');
    })

    function send_order_complete(data){
         //new line by omar
         previousBtn.classList.remove('d-inline-block');
         previousBtn.classList.add('d-none');


        $('#onCheckOut').addClass('hideOption');
        if($('#payment-cash').is(':checked'))
        {

            GoStep4();
            //new line by omar
            console.log('hide back ');
            $('.backBtn').removeClass('showOption');
            $('.backBtn').addClass('hideOption');
            $('#order_save_number').text(data.code);
            $('.numofcard').text('');
            //alert('Complete Order');
        }
        else{
            $('#payment-form').removeClass('hideOption');
            $('#payment-form').addClass('showOption');

            $('.backBtn').removeClass('hideOption');
            $('.backBtn').addClass('showOption');
            stripe_payment(data);
        }
    }

    function stripe_payment(data)
    {
        var stripe = Stripe(data.pk);
        var elements = stripe.elements();
        var clientSecret = data.intent.client_secret ;
        // Set up Stripe.js and Elements to use in checkout form
        var style = {
            base: {
                color: "#32325d",
            }
        };

        var card = elements.create("card", { style: style });
        card.mount("#card-element");

        card.on('change', ({error}) => {
            const displayError = document.getElementById('card-errors');
            if (error) {
                displayError.textContent = error.message;
            } else {
                displayError.textContent = '';
            }
        });

        var form = document.getElementById('payment-form');

        form.addEventListener('submit', function(ev) {
            ev.preventDefault();
            stripe.confirmCardPayment(clientSecret, {
                payment_method: {
                    card: card,
                    billing_details: {
                        name: '{{ user.name}}'
                    }
                }
            }).then(function(result) {
                if (result.error) {
                    // Show error to your customer (e.g., insufficient funds)
                    console.log(result.error.message);
                } else {
                    // The payment has been processed!
                    if (result.paymentIntent.status === 'succeeded') {
                        $.request('onCheckOut', {
                            data: {result: result},
                            success: function(data) {
                                GoStep4();
                                $('#order_save_number').text(data.code);
                                $('.backBtn').removeClass('d-inline-block');
                                $('.backBtn').addClass('d-none');
                                $('.numCart').text('0');
                            }

                        })
                    }
                }
            });
            Loader();
        });
    }

    var twoToneButton = document.querySelector('.twoToneButton');
    function Loader()
    {
        $(".twoToneButton").attr("disabled", true);
        twoToneButton.innerHTML = "Proccessing";
        twoToneButton.classList.add('spinning');

        setTimeout(
            function  (){
                $(".twoToneButton").attr("disabled", false);
                twoToneButton.classList.remove('spinning');
                twoToneButton.innerHTML = "Pay";

            }, 6000);
    }

</script>
{% endput %}
